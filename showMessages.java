package StudentManagement;

import static StudentManagement.docChat.url;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import StudentManagement.login.*;
//import static hossam.login.idTxt;
import static StudentManagement.showMessages.*;
import java.awt.Color;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author ahmed
 */
public class showMessages extends JFrame {
//    idTxt="kjkl";
//    int doc;

    String data2;
    String s_id;

    public showMessages() {
        initComponents();
                this.getContentPane().setBackground(new Color(50, 80, 150));

                ImageIcon cancelImage = new ImageIcon("submit.png");
                send.setIcon(cancelImage);

//        try{
//        this.data2 = doSendcmsg.getText();
//        }catch(NumberFormatException e){
//            System.out.println(e.getMessage());
//        }
                this.s_id = sendFromDocId.getText();

//            idTxt="";
//        int doc = Integer.parseInt(docId.getText());
                label.setVisible(false);
                selectDoc();
//        main1();

//        switch ( doc) {
//            case 2000:
//                label.setVisible(true);
//                label.setText("welcome Doctor Hatem");
//                break;
//            case 2001:
//                label.setVisible(true);
//
//                label.setText("welcome Doctor Eman");
//                break;
//            case 2002:
//                label.setVisible(true);
//
//                label.setText("welcome Doctor Ahmed sakr");
//
//                break;
//            case 2003:
//                label.setVisible(true);
//
//                label.setText("welcome Doctor Hamdy");
//
//                break;
//            case 2004:
//                label.setVisible(true);
//
//                label.setText("welcome Doctor Anas AbdElaziz");
//
//                break;
//            case 2005:
//                label.setVisible(true);
//
//                label.setText("welcome Doctor Ashraf Elsisi");
//
//                break;
//            default:
//                break;
//        }
    }

    /**
     * Creates new form showMessages
     */
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();
        doSendcmsg = new javax.swing.JTextField();
        send = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        sendFromDocId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 255));

        label.setFont(new java.awt.Font("Tahoma", 3, 24)); // NOI18N
        label.setForeground(new java.awt.Color(255, 255, 255));
        label.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        label.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton2.setText("Show Recieved Messages");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(null);

        messageArea.setBackground(new java.awt.Color(100, 130, 180));
        messageArea.setColumns(20);
        messageArea.setFont(new java.awt.Font("Myanmar Text", 1, 16)); // NOI18N
        messageArea.setForeground(new java.awt.Color(255, 255, 255));
        messageArea.setRows(5);
        messageArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        messageArea.setFocusable(false);
        jScrollPane1.setViewportView(messageArea);

        jScrollPane2.setViewportView(jScrollPane1);

        doSendcmsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doSendcmsgActionPerformed(evt);
            }
        });

        send.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        send.setText("Send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 15)); // NOI18N
        jLabel1.setText("Student iD");

        sendFromDocId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendFromDocIdActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jLabel2.setText("Please Enter your messege ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 932, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(sendFromDocId, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(131, 131, 131)
                                        .addComponent(jButton2))
                                    .addComponent(doSendcmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(354, 354, 354)
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 5, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sendFromDocId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(doSendcmsg, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
//        connection();
        connectiontwo();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
//        connection2();
         sendToStudents();
         connectiontwo();
    }//GEN-LAST:event_sendActionPerformed

    private void sendFromDocIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendFromDocIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendFromDocIdActionPerformed

    private void doSendcmsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doSendcmsgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doSendcmsgActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void anything(){
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new showMessages().setVisible(true);
            }
        });
    }
//    public static void main1(String args[]) {
    public static void main(String args []) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(showMessages.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new showMessages().setVisible(true);
//            }
//        });
            anything();
    }
    int r_id;
    idTxt i = new idTxt();

    public void selectDoc() {
        if ("2000".equals(i.idTxt())) {
            label.setText("Welcome Doctor Hatem");
            r_id = 2000;
            label.setVisible(true);
        } else if ("2005".equals(i.idTxt())) {
            label.setText("Welcome Doctor Eman");
            label.setVisible(true);
            r_id = 2005;
        } else if ("2001".equals(i.idTxt())) {
            label.setText("Welcome Doctor Ahmed sakr");
            label.setVisible(true);
            r_id = 2001;
        } else if ("2002".equals(i.idTxt())) {
            label.setText("Welcome Doctor Hamdy");
            label.setVisible(true);
            r_id = 2002;
        } else if ("2003".equals(i.idTxt())) {
            label.setText("Welcome Doctor Anas AbdElaziz");
            label.setVisible(true);
            r_id = 2003;
        } else if ("2004".equals(i.idTxt())) {
            label.setText("Welcome Doctor Ashraf Elsisi");
            label.setVisible(true);
            r_id = 2004;
        }
    }
    String data;
    public static String url = "jdbc:mysql://localhost:3306/test";
    String password = "";
    String userName = "root";
    static int id = 1;
    Connection c;

    public void connection() {
        try {

//            data = docmsg.getText();
            c = DriverManager.getConnection(url, userName, password);
//            String sql = "insert into message(id,message,s_id,r_id) values('" + ++id + "','" + data + "','" + s_id.getText() + "','" + r_id + "') ";
            String sql2 = "select * from message where r_id = '" + r_id + "'";
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql2);
            while (r.next()) {
                messageArea.setText(messageArea.getText() + "\n" + r.getString("s_id") + " : " + r.getString("message"));
            }

//            docmsg.setText("");
//            s_id.setText("");
//            r_id.setText("");
//            if (r.getString("msgStu").equalsIgnoreCase(null)) {
//            } else {
//                textAreaDoc.setText(textAreaStudent.getText() + "\nStudent : " + msgTxt.getText());
//                textAreaStudent.setText(textAreaStudent.getText() + "\nadmin : " + r.getString("msgStu"));
//            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

//    public void connection2() {
//        try {
////                    data2=doSendcmsg.getText();
//            String sql3 = "insert message(id,message,s_id,r_id) values('" + ++id + "','" + doSendcmsg.getText() + "','" + s_id+ "','" + r_id + "') ";
//            Statement s = c.createStatement();
//            s.executeUpdate(sql3);
//        } catch (SQLException e) {
//            System.out.println(e.getMessage());
//        }
//
//    }
    public void sendToStudents() {

        try {
            selectDoc();
            c = DriverManager.getConnection(url, userName, password);
            String sql2 = "insert into message values('" + id + "','" + doSendcmsg.getText() + "','" + r_id + "','" + sendFromDocId.getText() + "')";
            Statement s = c.createStatement();
            s.executeUpdate(sql2);
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }
//    String name;
//    public void connection2() {
//                try {
//        Connection c = DriverManager.getConnection(url, userName, password);
////            String sql = "insert into message(id,message,s_id,r_id) values('" + ++id + "','" + data + "','" + s_id.getText() + "','" + r_id + "') ";
//        String sql2 = "select Student_Name from student where r_id = '" + r_id+ "'";
//        Statement s = c.createStatement();
//        ResultSet r = s.executeQuery(sql2);
//        while (r.next()) {
//
//        }
//    }
//    catch (SQLException e) {
//            System.out.println(e.getMessage());
//    }
//}

    public void connectiontwo() {
        if ("2000".equals(i.idTxt())) {
            r_id = 2000;
        } else if ("2005".equals(i.idTxt())) {
            r_id = 2005;
        } else if ("2001".equals(i.idTxt())) {
            r_id = 2001;
        } else if ("2002".equals(i.idTxt())) {
            r_id = 2002;
        } else if ("2003".equals(i.idTxt())) {
            r_id = 2003;
        } else if ("2004".equals(i.idTxt())) {
            r_id = 2004;
        }
        System.out.println(r_id);
        String sql2 = "SELECT * FROM `message` WHERE (s_id = '" + r_id + "' AND r_id = '" + sendFromDocId.getText() + "') OR s_id = '" + sendFromDocId.getText() + "' AND r_id = '" + r_id + "'";
        try {
            Connection c = DriverManager.getConnection(url, userName, password);
            Statement s = c.createStatement();
            ResultSet r = s.executeQuery(sql2);
            messageArea.setText("");
            while (r.next()) {
                String message = r.getString("message");
                if(r.getString("s_id").equals(sendFromDocId.getText())){
                messageArea.setText(messageArea.getText() + "\n Student"+sendFromDocId.getText()+" : " + message);
                }else{
                messageArea.setText(messageArea.getText() + "\n You: " + message);
                
                }
            }
            doSendcmsg.setText("");
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JTextField doSendcmsg;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JButton send;
    private javax.swing.JTextField sendFromDocId;
    // End of variables declaration//GEN-END:variables
}
